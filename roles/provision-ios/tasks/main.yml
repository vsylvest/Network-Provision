- name: set node types (NETWORKING MODE)
  set_fact:
    tios1_node: "{{ ec2_lab_node_types_networking['tios1'] }}"


##############Router 1##############

- name: find ami for tios1 (NETWORKING MODE)
  ec2_ami_facts:
    region: "{{ ec2_region }}"
    owners: "{{ ec2_instance_types[tios1_node].owners }}"
    filters:
      name: "{{ ec2_instance_types[tios1_node].filter }}"
      architecture: "{{ ec2_instance_types[tios1_node].architecture }}"
  register: amis

- name: save ami for tios1 (NETWORKING MODE)
  set_fact:
    tios1_ami: >
      {{ amis.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}
      
- name: Create EC2 instances for tios1 node (NETWORKING MODE)
  ec2:
    assign_public_ip: yes
    key_name: "Cisco-key"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_instance_types[tios1_node].size }}"
    image: "{{ tios1_ami.image_id }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    count_tag:
      Workshop_tios1: "{{ec2_name_prefix}}-tios1"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
  register: tios1_output

- name: Ensure tags are present for tios1 node (NETWORKING MODE)
  ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{item.1}}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{item.0 + 1}}-tios1"
      Workshop_tios1: "{{ec2_name_prefix}}-tios1"
      Index: "{{ item[0] }}"
      short_name: "tios1"
  with_indexed_items:
    - "{{ tios1_output.instance_ids }}"

      

- name: grab all network interfaces for VPC 1 (NETWORKING MODE)
  ec2_eni_facts:
    region: "{{ ec2_region }}"
    filters:
      vpc-id: "{{ec2_vpc_id}}"
  register: eni_facts_1

- name: grab all network interfaces for VPC 2 (NETWORKING MODE)
  ec2_eni_facts:
    region: "{{ ec2_region }}"
    filters:
      vpc-id: "{{ec2_vpc_id2}}"
  register: eni_facts_2

- name: Disable Source/Dest check on instance {{ec2_vpc_id1}} (NETWORKING MODE)
  ec2_eni:
    eni_id: "{{ item['network_interface_id'] }}"
    region: "{{ ec2_region }}"
    source_dest_check: false
  with_items:
    - "{{eni_facts_1['network_interfaces']}}"
    - "{{eni_facts_2['network_interfaces']}}"